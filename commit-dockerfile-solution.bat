@echo off
setlocal enabledelayedexpansion

echo.
echo ==========================================
echo üöÄ Commit - Solu√ß√£o Dockerfile Simples
echo ==========================================
echo.

echo üìÅ Diret√≥rio atual: %CD%
echo.

echo üîç Verificando arquivos...
echo.

REM Verificar Dockerfile
if exist "Dockerfile" (
    echo ‚úÖ Dockerfile - ENCONTRADO
) else (
    echo ‚ùå Dockerfile - N√ÉO ENCONTRADO
)

REM Verificar app.py na raiz
if exist "app.py" (
    echo ‚úÖ app.py - ENCONTRADO
) else (
    echo ‚ùå app.py - N√ÉO ENCONTRADO
)

REM Verificar requirements.txt
if exist "requirements.txt" (
    echo ‚úÖ requirements.txt - ENCONTRADO
) else (
    echo ‚ùå requirements.txt - N√ÉO ENCONTRADO
)

REM Verificar Procfile
if exist "Procfile" (
    echo ‚úÖ Procfile - ENCONTRADO
) else (
    echo ‚ùå Procfile - N√ÉO ENCONTRADO
)

REM Verificar se nixpacks.toml foi removido
if not exist "nixpacks.toml" (
    echo ‚úÖ nixpacks.toml - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  nixpacks.toml - AINDA EXISTE (deve ser removido)
)

REM Verificar webapp/app.py
if exist "webapp\app.py" (
    echo ‚úÖ webapp\app.py - ENCONTRADO
) else (
    echo ‚ùå webapp\app.py - N√ÉO ENCONTRADO
)

echo.

REM Verificar status do git
echo üìã Status do Git:
git status --short
echo.

REM Adicionar todos os arquivos
echo üì¶ Adicionando arquivos ao Git...
git add .
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao adicionar arquivos
    pause
    exit /b 1
)

echo ‚úÖ Arquivos adicionados
echo.

REM Fazer commit
echo üíæ Fazendo commit...
git commit -m "Solu√ß√£o Dockerfile Simples - Easypanel

- Criado Dockerfile simples na raiz
- Removido nixpacks.toml (causava conflitos)
- Atualizado app.py como entry point
- Simplificado Procfile para python app.py
- Configurado PYTHONPATH corretamente
- Usa imagem Python oficial

Configura√ß√£o no Easypanel:
- Service Type: Docker
- Dockerfile Path: Dockerfile
- Port: 5000

Solu√ß√£o para erros:
- NIXPACKS_PATH undefined
- nix-env installation failed
- pip command not found

Vantagens:
- Dockerfile simples e confi√°vel
- Sem depend√™ncias do Nixpacks
- Build mais r√°pido
- F√°cil de debugar"
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao fazer commit
    pause
    exit /b 1
)

echo ‚úÖ Commit realizado com sucesso
echo.

REM Push para o reposit√≥rio
echo üöÄ Enviando para o reposit√≥rio...
git push origin main
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao enviar para o reposit√≥rio
    pause
    exit /b 1
)

echo ‚úÖ Push realizado com sucesso
echo.

echo ==========================================
echo üéâ COMMIT CONCLU√çDO - DOCKERFILE SIMPLES!
echo ==========================================
echo.
echo üìã Configura√ß√£o no Easypanel:
echo 1. Service Type: Docker
echo 2. Dockerfile Path: Dockerfile
echo 3. Port: 5000
echo.
echo üîß Solu√ß√£o implementada:
echo - Dockerfile simples na raiz
echo - nixpacks.toml removido
echo - app.py como entry point
echo - PYTHONPATH configurado
echo - Imagem Python oficial
echo.
echo üéØ Vantagens:
echo - Sem conflitos do Nixpacks
echo - Build mais r√°pido
echo - F√°cil de debugar
echo - Configura√ß√£o simples
echo.
echo üß™ Teste ap√≥s deploy:
echo curl https://seu-dominio.com/api/health
echo.
echo üöÄ Problemas resolvidos:
echo - NIXPACKS_PATH undefined
echo - nix-env installation failed
echo - pip command not found
echo.
pause
