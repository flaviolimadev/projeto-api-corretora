@echo off
setlocal enabledelayedexpansion

echo.
echo ==========================================
echo üöÄ Commit - Final Docker Solution
echo ==========================================
echo.

echo üìÅ Diret√≥rio atual: %CD%
echo.

echo üîç Verificando arquivos...
echo.

REM Verificar Dockerfile
if exist "Dockerfile" (
    echo ‚úÖ Dockerfile - ENCONTRADO
) else (
    echo ‚ùå Dockerfile - N√ÉO ENCONTRADO
)

REM Verificar docker-compose.yml
if exist "docker-compose.yml" (
    echo ‚úÖ docker-compose.yml - ENCONTRADO
) else (
    echo ‚ùå docker-compose.yml - N√ÉO ENCONTRADO
)

REM Verificar .dockerignore
if exist ".dockerignore" (
    echo ‚úÖ .dockerignore - ENCONTRADO
) else (
    echo ‚ùå .dockerignore - N√ÉO ENCONTRADO
)

REM Verificar app.py na raiz
if exist "app.py" (
    echo ‚úÖ app.py - ENCONTRADO
) else (
    echo ‚ùå app.py - N√ÉO ENCONTRADO
)

REM Verificar requirements.txt
if exist "requirements.txt" (
    echo ‚úÖ requirements.txt - ENCONTRADO
) else (
    echo ‚ùå requirements.txt - N√ÉO ENCONTRADO
)

REM Verificar se arquivos Nixpacks foram removidos
if not exist "Procfile" (
    echo ‚úÖ Procfile - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  Procfile - AINDA EXISTE (deve ser removido)
)

if not exist "runtime.txt" (
    echo ‚úÖ runtime.txt - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  runtime.txt - AINDA EXISTE (deve ser removido)
)

if not exist "nixpacks.toml" (
    echo ‚úÖ nixpacks.toml - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  nixpacks.toml - AINDA EXISTE (deve ser removido)
)

if not exist "easypanel.yml" (
    echo ‚úÖ easypanel.yml - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  easypanel.yml - AINDA EXISTE (deve ser removido)
)

if not exist "Dockerfile.easypanel" (
    echo ‚úÖ Dockerfile.easypanel - REMOVIDO (correto)
) else (
    echo ‚ö†Ô∏è  Dockerfile.easypanel - AINDA EXISTE (deve ser removido)
)

REM Verificar webapp/app.py
if exist "webapp\app.py" (
    echo ‚úÖ webapp\app.py - ENCONTRADO
) else (
    echo ‚ùå webapp\app.py - N√ÉO ENCONTRADO
)

echo.

REM Verificar status do git
echo üìã Status do Git:
git status --short
echo.

REM Adicionar todos os arquivos
echo üì¶ Adicionando arquivos ao Git...
git add .
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao adicionar arquivos
    pause
    exit /b 1
)

echo ‚úÖ Arquivos adicionados
echo.

REM Fazer commit
echo üíæ Fazendo commit...
git commit -m "Final Docker Solution - For√ßa Dockerfile

- Dockerfile simplificado e direto
- Removido easypanel.yml (causava confus√£o)
- Removido Dockerfile.easypanel (desnecess√°rio)
- Criado docker-compose.yml para refer√™ncia
- .dockerignore atualizado para excluir Nixpacks
- Configura√ß√£o m√≠nima e limpa

Configura√ß√£o no Easypanel:
- Service Type: Docker
- Dockerfile Path: Dockerfile
- Port: 5000

Solu√ß√£o para erros:
- .nixpacks/nixpkgs-*.nix not found
- Nixpacks Dockerfile autom√°tico
- For√ßa uso do Dockerfile customizado

Vantagens:
- Dockerfile simples e direto
- Sem configura√ß√µes desnecess√°rias
- Build mais r√°pido
- F√°cil de debugar"
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao fazer commit
    pause
    exit /b 1
)

echo ‚úÖ Commit realizado com sucesso
echo.

REM Push para o reposit√≥rio
echo üöÄ Enviando para o reposit√≥rio...
git push origin main
if !errorlevel! neq 0 (
    echo ‚ùå Erro ao enviar para o reposit√≥rio
    pause
    exit /b 1
)

echo ‚úÖ Push realizado com sucesso
echo.

echo ==========================================
echo üéâ COMMIT CONCLU√çDO - FINAL DOCKER!
echo ==========================================
echo.
echo üìã Configura√ß√£o no Easypanel:
echo 1. Service Type: Docker
echo 2. Dockerfile Path: Dockerfile
echo 3. Port: 5000
echo.
echo üîß Solu√ß√£o implementada:
echo - Dockerfile simplificado
echo - easypanel.yml removido
echo - Dockerfile.easypanel removido
echo - docker-compose.yml criado
echo - .dockerignore atualizado
echo.
echo üéØ Vantagens:
echo - Dockerfile simples e direto
echo - Sem configura√ß√µes desnecess√°rias
echo - Build mais r√°pido
echo - F√°cil de debugar
echo.
echo üß™ Teste ap√≥s deploy:
echo curl https://seu-dominio.com/api/health
echo.
echo üöÄ Problemas resolvidos:
echo - .nixpacks/nixpkgs-*.nix not found
echo - Nixpacks Dockerfile autom√°tico
echo - For√ßa uso do Dockerfile customizado
echo.
echo ‚úÖ Solu√ß√£o final - Dockerfile simples!
echo.
pause
